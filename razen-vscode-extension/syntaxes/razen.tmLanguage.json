{
  "name": "Razen",
  "scopeName": "source.razen",
  "fileTypes": ["rzn"],
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#document-structure"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#operators"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.number-sign.razen",
          "match": "#.*$"
        },
        {
          "name": "comment.block.razen",
          "begin": "/\\*",
          "end": "\\*/",
          "captures": {
            "0": { "name": "punctuation.definition.comment.razen" }
          }
        }
      ]
    },
    "document-structure": {
      "patterns": [
        {
          "name": "keyword.control.document.razen",
          "match": "\\b(type)\\s+(web|script|cli)\\b",
          "captures": {
            "1": { "name": "storage.type.document.razen" },
            "2": { "name": "constant.language.document-type.razen" }
          }
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.razen",
          "match": "\\b(if|else|elif|while|for|return|break|continue|fun|when|not|and|or|try|catch|throw|finally|in)\\b"
        },
        {
          "name": "constant.language.razen",
          "match": "\\b(true|false|null)\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.razen",
          "match": "\\b(plus|minus|times|by|mod|power|round|sqrt|abs|size|join|big|small|split|replace|trim|find|count|add|take|clear|sort|reverse|keys|values|contains|remove|get|time|date|timestamp|sleep|say|ask|write|read_file)\\b"
        },
        {
          "name": "entity.name.function.definition.razen",
          "match": "\\b(fun)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
          "captures": {
            "1": { "name": "keyword.control.function.razen" },
            "2": { "name": "entity.name.function.razen" }
          }
        },
        {
          "name": "meta.function-call.razen",
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
          "captures": {
            "1": { "name": "entity.name.function.razen" }
          }
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "storage.type.razen",
          "match": "\\b(let|take|hold|put|sum|diff|prod|div|mod|power|is|text|concat|slice|len|split|trim|replace|find|list|arr|append|remove|size|clear|map|key|value|get|set|contains|keys|values|current|now|year|month|day|hour|minute|second|store|box|ref|show|read|write|read_file)\\b"
        },
        {
          "name": "variable.declaration.razen",
          "match": "\\b(let|take|hold|put)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\b",
          "captures": {
            "1": { "name": "storage.type.razen" },
            "2": { "name": "variable.other.definition.razen" }
          }
        },
        {
          "name": "variable.other.razen",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.razen",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.razen",
              "match": "\\\\([\\\\\"\\'nrtbf]|u[0-9a-fA-F]{4})"
            },
            {
              "name": "variable.interpolation.razen",
              "match": "\\$\\{([^\\}]*)\\}",
              "captures": {
                "1": { "patterns": [{ "include": "$self" }] }
              }
            }
          ]
        },
        {
          "name": "string.quoted.single.razen",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.razen",
              "match": "\\\\([\\\\\"\\'nrtbf]|u[0-9a-fA-F]{4})"
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.decimal.razen",
          "match": "\\b([0-9]+\\.[0-9]+)\\b"
        },
        {
          "name": "constant.numeric.integer.razen",
          "match": "\\b([0-9]+)\\b"
        },
        {
          "name": "constant.numeric.hex.razen",
          "match": "\\b0x[0-9a-fA-F]+\\b"
        },
        {
          "name": "constant.numeric.binary.razen",
          "match": "\\b0b[01]+\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.arithmetic.razen",
          "match": "\\+|\\-|\\*|\\/|\\%|\\*\\*|\\/\\/"
        },
        {
          "name": "keyword.operator.assignment.razen",
          "match": "\\=|\\+=|\\-=|\\*=|\\/=|\\%="
        },
        {
          "name": "keyword.operator.comparison.razen",
          "match": "\\==|\\!=|\\>|\\<|\\>=|\\<="
        },
        {
          "name": "keyword.operator.logical.razen",
          "match": "\\&\\&|\\|\\||\\!"
        },
        {
          "name": "keyword.operator.accessor.razen",
          "match": "\\."
        }
      ]
    }
  }
}
