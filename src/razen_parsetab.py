
# razen_parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocEQNELTLEGTGEleftPLUSMINUSleftMULTIPLYDIVIDEMODULOrightNOTrightUMINUSleftLPARENRPARENleftDOTleftLBRACKETRBRACKETAND ASSIGN COMMA DIVIDE DOT ELSE EQ FALSE FLOAT FUN GE GT HOLD ID IF INTEGER LBRACE LBRACKET LE LET LPAREN LT MINUS MODULO MULTIPLY NE NOT NULL OR PLUS PRINT PUT RBRACE RBRACKET RETURN RPAREN SEMICOLON SHOW STRING TAKE TRUE WHILEprogram : statementsstatements : statements statementstatements : statementstatements : emptystatement : variable_decl_stmt\n                 | function_decl_stmt\n                 | show_stmt\n                 | print_stmt\n                 | if_stmt\n                 | while_stmt\n                 | return_stmt\n                 | expression_stmt\n                 | block_stmt\n                 | empty_stmtblock_stmt : LBRACE statements RBRACEempty_stmt : SEMICOLONvariable_decl_stmt : LET ID ASSIGN expression SEMICOLON\n                         | TAKE ID ASSIGN expression SEMICOLON\n                         | HOLD ID ASSIGN expression SEMICOLON\n                         | PUT ID ASSIGN expression SEMICOLONfunction_decl_stmt : FUN ID LPAREN params_opt RPAREN LBRACE statements RBRACEparams_opt : param_list\n                  | emptyparam_list : param_list COMMA paramparam_list : paramparam : IDshow_stmt : SHOW expression SEMICOLONprint_stmt : PRINT expression SEMICOLONif_stmt : IF expression LBRACE statements RBRACE else_optelse_opt : ELSE LBRACE statements RBRACE\n                | ELSE if_stmt\n                | emptywhile_stmt : WHILE expression LBRACE statements RBRACEreturn_stmt : RETURN expression SEMICOLON\n                   | RETURN SEMICOLONexpression_stmt : assignment_expression SEMICOLON\n                       | function_call SEMICOLONassignment_expression : ID ASSIGN expressionfunction_call : ID LPAREN args_opt RPARENargs_opt : arg_list\n                | emptyarg_list : arg_list COMMA expressionarg_list : expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MULTIPLY expression\n                  | expression DIVIDE expression\n                  | expression MODULO expression\n                  | expression EQ expression\n                  | expression NE expression\n                  | expression LT expression\n                  | expression LE expression\n                  | expression GT expression\n                  | expression GE expression\n                  | expression AND expression\n                  | expression OR expressionexpression : MINUS expression %prec UMINUSexpression : NOT expressionexpression : LPAREN expression RPARENexpression : literal\n                  | ID\n                  | function_call\n                  | assignment_expressionliteral : INTEGER\n               | FLOAT\n               | STRING\n               | TRUE\n               | FALSE\n               | NULLempty :'
    
_lr_action_items = {'LET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,17,22,30,38,57,58,59,70,71,88,89,90,91,117,118,119,121,122,123,126,127,128,130,132,133,134,135,136,137,138,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,15,-2,15,-35,-36,-37,-15,-27,-28,15,15,-34,15,15,-17,-18,-19,-20,-70,-33,15,-29,-32,15,15,-31,-21,15,-30,]),'TAKE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,17,22,30,38,57,58,59,70,71,88,89,90,91,117,118,119,121,122,123,126,127,128,130,132,133,134,135,136,137,138,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,18,-2,18,-35,-36,-37,-15,-27,-28,18,18,-34,18,18,-17,-18,-19,-20,-70,-33,18,-29,-32,18,18,-31,-21,18,-30,]),'HOLD':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,17,22,30,38,57,58,59,70,71,88,89,90,91,117,118,119,121,122,123,126,127,128,130,132,133,134,135,136,137,138,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,19,-2,19,-35,-36,-37,-15,-27,-28,19,19,-34,19,19,-17,-18,-19,-20,-70,-33,19,-29,-32,19,19,-31,-21,19,-30,]),'PUT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,17,22,30,38,57,58,59,70,71,88,89,90,91,117,118,119,121,122,123,126,127,128,130,132,133,134,135,136,137,138,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,20,-2,20,-35,-36,-37,-15,-27,-28,20,20,-34,20,20,-17,-18,-19,-20,-70,-33,20,-29,-32,20,20,-31,-21,20,-30,]),'FUN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,17,22,30,38,57,58,59,70,71,88,89,90,91,117,118,119,121,122,123,126,127,128,130,132,133,134,135,136,137,138,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,21,-2,21,-35,-36,-37,-15,-27,-28,21,21,-34,21,21,-17,-18,-19,-20,-70,-33,21,-29,-32,21,21,-31,-21,21,-30,]),'SHOW':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,17,22,30,38,57,58,59,70,71,88,89,90,91,117,118,119,121,122,123,126,127,128,130,132,133,134,135,136,137,138,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,23,-2,23,-35,-36,-37,-15,-27,-28,23,23,-34,23,23,-17,-18,-19,-20,-70,-33,23,-29,-32,23,23,-31,-21,23,-30,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,17,22,30,38,57,58,59,70,71,88,89,90,91,117,118,119,121,122,123,126,127,128,130,132,133,134,135,136,137,138,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,24,-2,24,-35,-36,-37,-15,-27,-28,24,24,-34,24,24,-17,-18,-19,-20,-70,-33,24,-29,-32,24,24,-31,-21,24,-30,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,17,22,30,38,57,58,59,70,71,88,89,90,91,117,118,119,121,122,123,126,127,128,130,131,132,133,134,135,136,137,138,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,25,-2,25,-35,-36,-37,-15,-27,-28,25,25,-34,25,25,-17,-18,-19,-20,-70,-33,25,-29,25,-32,25,25,-31,-21,25,-30,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,17,22,30,38,57,58,59,70,71,88,89,90,91,117,118,119,121,122,123,126,127,128,130,132,133,134,135,136,137,138,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,26,-2,26,-35,-36,-37,-15,-27,-28,26,26,-34,26,26,-17,-18,-19,-20,-70,-33,26,-29,-32,26,26,-31,-21,26,-30,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,17,22,30,38,57,58,59,70,71,88,89,90,91,117,118,119,121,122,123,126,127,128,130,132,133,134,135,136,137,138,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,27,-2,27,-35,-36,-37,-15,-27,-28,27,27,-34,27,27,-17,-18,-19,-20,-70,-33,27,-29,-32,27,27,-31,-21,27,-30,]),'LBRACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,17,22,30,38,43,44,45,46,47,48,49,50,51,52,54,55,57,58,59,61,70,71,85,86,88,89,90,91,93,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,126,127,128,130,131,132,133,134,135,136,137,138,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,22,-2,22,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,89,90,-35,-36,-37,-38,-15,-27,-57,-58,-28,22,22,-34,-39,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,22,22,-17,-18,-19,-20,128,-70,-33,22,-29,134,-32,22,22,-31,-21,22,-30,]),'SEMICOLON':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,17,22,27,28,29,30,38,39,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,61,70,71,85,86,88,89,90,91,92,93,95,96,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,126,127,128,130,132,133,134,135,136,137,138,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,17,57,58,59,-2,17,71,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,88,91,-35,-36,-37,-38,-15,-27,-57,-58,-28,17,17,-34,119,-39,121,122,123,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,17,17,-17,-18,-19,-20,-70,-33,17,-29,-32,17,17,-31,-21,17,-30,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,30,32,33,38,40,41,42,57,58,59,60,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,90,91,94,117,118,119,121,122,123,125,126,127,128,130,132,133,134,135,136,137,138,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,31,-16,34,35,36,37,16,44,44,44,44,44,-2,44,44,16,44,44,44,-35,-36,-37,44,44,44,44,98,-15,-27,44,44,44,44,44,44,44,44,44,44,44,44,44,-28,16,16,-34,44,16,16,-17,-18,-19,-20,98,-70,-33,16,-29,-32,16,16,-31,-21,16,-30,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,30,57,58,59,70,71,88,91,119,121,122,123,126,127,130,132,135,136,138,],[-70,0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-2,-35,-36,-37,-15,-27,-28,-34,-17,-18,-19,-20,-70,-33,-29,-32,-31,-21,-30,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,14,17,22,30,38,57,58,59,70,71,88,89,90,91,117,118,119,121,122,123,126,127,128,130,132,133,134,135,136,137,138,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-70,-2,70,-35,-36,-37,-15,-27,-28,-70,-70,-34,126,127,-17,-18,-19,-20,-70,-33,-70,-29,-32,136,-70,-31,-21,138,-30,]),'ASSIGN':([16,31,34,35,36,44,],[32,60,66,67,68,32,]),'LPAREN':([16,23,24,25,26,27,32,33,37,40,41,42,44,60,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,94,],[33,42,42,42,42,42,42,42,69,42,42,42,33,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'MINUS':([23,24,25,26,27,32,33,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,61,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,92,93,94,95,96,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,],[40,40,40,40,40,40,40,73,40,40,40,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,73,73,73,73,40,73,73,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-57,-58,73,73,-39,40,73,73,73,-44,-45,-46,-47,-48,73,73,73,73,73,73,73,73,-59,73,]),'NOT':([23,24,25,26,27,32,33,40,41,42,60,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,94,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'INTEGER':([23,24,25,26,27,32,33,40,41,42,60,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,94,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'FLOAT':([23,24,25,26,27,32,33,40,41,42,60,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,94,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'STRING':([23,24,25,26,27,32,33,40,41,42,60,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,94,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'TRUE':([23,24,25,26,27,32,33,40,41,42,60,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,94,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'FALSE':([23,24,25,26,27,32,33,40,41,42,60,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,94,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'NULL':([23,24,25,26,27,32,33,40,41,42,60,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,94,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'RPAREN':([33,43,44,45,46,47,48,49,50,51,52,61,62,63,64,65,69,85,86,87,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,129,],[-70,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-38,93,-40,-41,-43,-70,-57,-58,116,-39,-26,124,-22,-23,-25,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-42,-24,]),'PLUS':([39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,65,85,86,87,92,93,95,96,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,],[72,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,72,72,72,72,72,72,-57,-58,72,72,-39,72,72,72,-44,-45,-46,-47,-48,72,72,72,72,72,72,72,72,-59,72,]),'MULTIPLY':([39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,65,85,86,87,92,93,95,96,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,],[74,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,74,74,74,74,74,74,-57,-58,74,74,-39,74,74,74,74,74,-46,-47,-48,74,74,74,74,74,74,74,74,-59,74,]),'DIVIDE':([39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,65,85,86,87,92,93,95,96,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,],[75,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,75,75,75,75,75,75,-57,-58,75,75,-39,75,75,75,75,75,-46,-47,-48,75,75,75,75,75,75,75,75,-59,75,]),'MODULO':([39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,65,85,86,87,92,93,95,96,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,],[76,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,76,76,76,76,76,76,-57,-58,76,76,-39,76,76,76,76,76,-46,-47,-48,76,76,76,76,76,76,76,76,-59,76,]),'EQ':([39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,65,85,86,87,92,93,95,96,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,],[77,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,77,77,77,77,77,77,-57,-58,77,77,-39,77,77,77,-44,-45,-46,-47,-48,None,None,None,None,None,None,77,77,-59,77,]),'NE':([39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,65,85,86,87,92,93,95,96,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,],[78,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,78,78,78,78,78,78,-57,-58,78,78,-39,78,78,78,-44,-45,-46,-47,-48,None,None,None,None,None,None,78,78,-59,78,]),'LT':([39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,65,85,86,87,92,93,95,96,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,],[79,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,79,79,79,79,79,79,-57,-58,79,79,-39,79,79,79,-44,-45,-46,-47,-48,None,None,None,None,None,None,79,79,-59,79,]),'LE':([39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,65,85,86,87,92,93,95,96,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,],[80,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,80,80,80,80,80,80,-57,-58,80,80,-39,80,80,80,-44,-45,-46,-47,-48,None,None,None,None,None,None,80,80,-59,80,]),'GT':([39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,65,85,86,87,92,93,95,96,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,],[81,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,81,81,81,81,81,81,-57,-58,81,81,-39,81,81,81,-44,-45,-46,-47,-48,None,None,None,None,None,None,81,81,-59,81,]),'GE':([39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,65,85,86,87,92,93,95,96,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,],[82,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,82,82,82,82,82,82,-57,-58,82,82,-39,82,82,82,-44,-45,-46,-47,-48,None,None,None,None,None,None,82,82,-59,82,]),'AND':([39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,65,85,86,87,92,93,95,96,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,],[83,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,83,83,83,83,83,83,-57,-58,83,83,-39,83,83,83,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,83,-59,83,]),'OR':([39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,65,85,86,87,92,93,95,96,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,],[84,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,84,84,84,84,84,84,-57,-58,84,84,-39,84,84,84,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,84,]),'COMMA':([43,44,45,46,47,48,49,50,51,52,61,63,65,85,86,93,98,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,129,],[-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-38,94,-43,-57,-58,-39,-26,125,-25,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-42,-24,]),'ELSE':([126,],[131,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,22,89,90,128,134,],[2,38,117,118,133,137,]),'statement':([0,2,22,38,89,90,117,118,128,133,134,137,],[3,30,3,30,3,3,30,30,3,30,3,30,]),'empty':([0,22,33,69,89,90,126,128,134,],[4,4,64,101,4,4,132,4,4,]),'variable_decl_stmt':([0,2,22,38,89,90,117,118,128,133,134,137,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'function_decl_stmt':([0,2,22,38,89,90,117,118,128,133,134,137,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'show_stmt':([0,2,22,38,89,90,117,118,128,133,134,137,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'print_stmt':([0,2,22,38,89,90,117,118,128,133,134,137,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'if_stmt':([0,2,22,38,89,90,117,118,128,131,133,134,137,],[9,9,9,9,9,9,9,9,9,135,9,9,9,]),'while_stmt':([0,2,22,38,89,90,117,118,128,133,134,137,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'return_stmt':([0,2,22,38,89,90,117,118,128,133,134,137,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'expression_stmt':([0,2,22,38,89,90,117,118,128,133,134,137,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'block_stmt':([0,2,22,38,89,90,117,118,128,133,134,137,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'empty_stmt':([0,2,22,38,89,90,117,118,128,133,134,137,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'assignment_expression':([0,2,22,23,24,25,26,27,32,33,38,40,41,42,60,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,89,90,94,117,118,128,133,134,137,],[28,28,28,46,46,46,46,46,46,46,28,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,28,28,46,28,28,28,28,28,28,]),'function_call':([0,2,22,23,24,25,26,27,32,33,38,40,41,42,60,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,89,90,94,117,118,128,133,134,137,],[29,29,29,45,45,45,45,45,45,45,29,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,29,29,45,29,29,29,29,29,29,]),'expression':([23,24,25,26,27,32,33,40,41,42,60,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,94,],[39,53,54,55,56,61,65,85,86,87,92,95,96,97,103,104,105,106,107,108,109,110,111,112,113,114,115,120,]),'literal':([23,24,25,26,27,32,33,40,41,42,60,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,94,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'args_opt':([33,],[62,]),'arg_list':([33,],[63,]),'params_opt':([69,],[99,]),'param_list':([69,],[100,]),'param':([69,125,],[102,129,]),'else_opt':([126,],[130,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','parser.py',20),
  ('statements -> statements statement','statements',2,'p_statements_list','parser.py',25),
  ('statements -> statement','statements',1,'p_statements_single','parser.py',33),
  ('statements -> empty','statements',1,'p_statements_empty','parser.py',38),
  ('statement -> variable_decl_stmt','statement',1,'p_statement','parser.py',44),
  ('statement -> function_decl_stmt','statement',1,'p_statement','parser.py',45),
  ('statement -> show_stmt','statement',1,'p_statement','parser.py',46),
  ('statement -> print_stmt','statement',1,'p_statement','parser.py',47),
  ('statement -> if_stmt','statement',1,'p_statement','parser.py',48),
  ('statement -> while_stmt','statement',1,'p_statement','parser.py',49),
  ('statement -> return_stmt','statement',1,'p_statement','parser.py',50),
  ('statement -> expression_stmt','statement',1,'p_statement','parser.py',51),
  ('statement -> block_stmt','statement',1,'p_statement','parser.py',52),
  ('statement -> empty_stmt','statement',1,'p_statement','parser.py',53),
  ('block_stmt -> LBRACE statements RBRACE','block_stmt',3,'p_block_stmt','parser.py',66),
  ('empty_stmt -> SEMICOLON','empty_stmt',1,'p_empty_stmt','parser.py',71),
  ('variable_decl_stmt -> LET ID ASSIGN expression SEMICOLON','variable_decl_stmt',5,'p_variable_decl_stmt','parser.py',77),
  ('variable_decl_stmt -> TAKE ID ASSIGN expression SEMICOLON','variable_decl_stmt',5,'p_variable_decl_stmt','parser.py',78),
  ('variable_decl_stmt -> HOLD ID ASSIGN expression SEMICOLON','variable_decl_stmt',5,'p_variable_decl_stmt','parser.py',79),
  ('variable_decl_stmt -> PUT ID ASSIGN expression SEMICOLON','variable_decl_stmt',5,'p_variable_decl_stmt','parser.py',80),
  ('function_decl_stmt -> FUN ID LPAREN params_opt RPAREN LBRACE statements RBRACE','function_decl_stmt',8,'p_function_decl_stmt','parser.py',86),
  ('params_opt -> param_list','params_opt',1,'p_params_opt','parser.py',91),
  ('params_opt -> empty','params_opt',1,'p_params_opt','parser.py',92),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list_multi','parser.py',96),
  ('param_list -> param','param_list',1,'p_param_list_single','parser.py',100),
  ('param -> ID','param',1,'p_param','parser.py',104),
  ('show_stmt -> SHOW expression SEMICOLON','show_stmt',3,'p_show_stmt','parser.py',110),
  ('print_stmt -> PRINT expression SEMICOLON','print_stmt',3,'p_print_stmt','parser.py',114),
  ('if_stmt -> IF expression LBRACE statements RBRACE else_opt','if_stmt',6,'p_if_stmt','parser.py',120),
  ('else_opt -> ELSE LBRACE statements RBRACE','else_opt',4,'p_else_opt','parser.py',124),
  ('else_opt -> ELSE if_stmt','else_opt',2,'p_else_opt','parser.py',125),
  ('else_opt -> empty','else_opt',1,'p_else_opt','parser.py',126),
  ('while_stmt -> WHILE expression LBRACE statements RBRACE','while_stmt',5,'p_while_stmt','parser.py',135),
  ('return_stmt -> RETURN expression SEMICOLON','return_stmt',3,'p_return_stmt','parser.py',140),
  ('return_stmt -> RETURN SEMICOLON','return_stmt',2,'p_return_stmt','parser.py',141),
  ('expression_stmt -> assignment_expression SEMICOLON','expression_stmt',2,'p_expression_stmt','parser.py',151),
  ('expression_stmt -> function_call SEMICOLON','expression_stmt',2,'p_expression_stmt','parser.py',152),
  ('assignment_expression -> ID ASSIGN expression','assignment_expression',3,'p_assignment_expression','parser.py',177),
  ('function_call -> ID LPAREN args_opt RPAREN','function_call',4,'p_function_call','parser.py',182),
  ('args_opt -> arg_list','args_opt',1,'p_args_opt','parser.py',186),
  ('args_opt -> empty','args_opt',1,'p_args_opt','parser.py',187),
  ('arg_list -> arg_list COMMA expression','arg_list',3,'p_arg_list_multi','parser.py',191),
  ('arg_list -> expression','arg_list',1,'p_arg_list_single','parser.py',195),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',200),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',201),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binop','parser.py',202),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',203),
  ('expression -> expression MODULO expression','expression',3,'p_expression_binop','parser.py',204),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','parser.py',205),
  ('expression -> expression NE expression','expression',3,'p_expression_binop','parser.py',206),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','parser.py',207),
  ('expression -> expression LE expression','expression',3,'p_expression_binop','parser.py',208),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','parser.py',209),
  ('expression -> expression GE expression','expression',3,'p_expression_binop','parser.py',210),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','parser.py',211),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','parser.py',212),
  ('expression -> MINUS expression','expression',2,'p_expression_unary_minus','parser.py',216),
  ('expression -> NOT expression','expression',2,'p_expression_not','parser.py',220),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',225),
  ('expression -> literal','expression',1,'p_expression_terminals','parser.py',229),
  ('expression -> ID','expression',1,'p_expression_terminals','parser.py',230),
  ('expression -> function_call','expression',1,'p_expression_terminals','parser.py',231),
  ('expression -> assignment_expression','expression',1,'p_expression_terminals','parser.py',232),
  ('literal -> INTEGER','literal',1,'p_literal','parser.py',238),
  ('literal -> FLOAT','literal',1,'p_literal','parser.py',239),
  ('literal -> STRING','literal',1,'p_literal','parser.py',240),
  ('literal -> TRUE','literal',1,'p_literal','parser.py',241),
  ('literal -> FALSE','literal',1,'p_literal','parser.py',242),
  ('literal -> NULL','literal',1,'p_literal','parser.py',243),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',247),
]
