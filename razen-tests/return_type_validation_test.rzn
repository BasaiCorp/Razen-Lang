# This is a test file for the Razen language server's return type validation

# Correct usage - matching token types with library function return types
num num_length = strlib[length]("Hello, World!");  # Correct: length returns a number, use 'num'
str upper_text = strlib[upper]("hello");          # Correct: upper returns a string, use 'str'
bool is_valid = filesystem[exists]("test.txt");    # Correct: exists returns a boolean, use 'bool'
list files = filesystem[list_dir](".");            # Correct: list_dir returns an array, use 'list'
var anything = random[choice]([1, 2, 3]);          # Correct: var can be used with any return type

# Incorrect usage - mismatched token types with library function return types
str num_length = strlib[length]("Hello, World!"); # Incorrect: length returns a number, should use 'num'
num upper_text = strlib[upper]("hello");           # Incorrect: upper returns a string, should use 'str'
num is_valid = filesystem[exists]("test.txt");     # Incorrect: exists returns a boolean, should use 'bool'
str files = filesystem[list_dir](".");            # Incorrect: list_dir returns an array, should use 'list'

# More filesystem library function examples with correct token types
bool is_file = filesystem[is_file]("example.txt");
bool is_dir = filesystem[is_dir]("examples");
bool created = filesystem[create_dir]("new_folder");
bool removed = filesystem[remove]("temp.txt");
str content = filesystem[read_file]("example.txt");
bool written = filesystem[write_file]("outvar.txt", "Hello World");
list dir_contents = filesystem[list_dir](".");
var meta = filesystem[metadata]("example.txt");
str abs_path = filesystem[absolute_path]("relative/path");
bool copied = filesystem[copy]("source.txt", "destination.txt");
bool moved = filesystem[move]("old.txt", "new.txt");
str ext = filesystem[extension]("file.txt");
str name = filesystem[file_stem]("file.txt");
str parent = filesystem[parent_dir]("path/to/file.txt");
str joined = filesystem[join_path]("path", "to", "file.txt");
bool changed = filesystem[change_dir]("new/directory");
str current = filesystem[current_dir]();
str temp = filesystem[temp_file]();
str temp_dir_path = filesystem[temp_dir]();

# Math library function examples with correct token types
num sum = mathlib[add](5, 3);
num diff = mathlib[subtract](10, 4);
num product = mathlib[multiply](6, 7);
num quotient = mathlib[divide](20, 5);
num pow = mathlib[power](2, 8);
num root = mathlib[sqrt](16);
num absolute = mathlib[abs](-10);
num rounded = mathlib[round](3.7);
num floored = mathlib[floor](3.7);
num ceiling = mathlib[ceil](3.2);
num sine = mathlib[sin](0.5);
num cosine = mathlib[cos](0.5);
num tangent = mathlib[tan](0.5);
num logarithm = mathlib[log](100);
num exponential = mathlib[exp](2);
num rand = mathlib[random]();
num maximum = mathlib[max](5, 10);
num minimum = mathlib[min](5, 10);
num modulus = mathlib[modulo](10, 3);
