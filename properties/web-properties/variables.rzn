# 1️⃣ Document Structure
# Core Structure
webpage => root element for web documents
top => container for metadata
bottom => container for visible content

# Metadata Elements
pagetitle => document title
info => metadata information
resource => external resource links
logic => embedded or external scripts
design => embedded styling rules

# Layout Elements
topbar => page header section
content => main content area
bottombar => page footer section
menu => navigation section
block => thematic grouping of content
story => self-contained composition
sidebar => related but separate content
box => generic container

# Text Elements
h1, h2, h3, h4, h5, h6 => headings
p => paragraph
word => inline text container
bold => important text
italic => emphasized text
snippet => code snippet
bulletlist => unordered list
numberlist => ordered list
item => list item

# Input Elements
entryform => form container
field => input field
textbox => multiline text input
dropdown => dropdown selection
choice => option in a dropdown
button => clickable button
tag => label for form elements

# Media Elements
img => image
clip => video player
sound => audio player
drawing => drawing area

# Data Elements
grid => table container
row => table row
header => table header cell
cell => table data cell

# 2️⃣ HTML Element Access Variables
get => for accessing HTML elements by ID. Use to interact with specific elements.
query => for accessing HTML elements using CSS selectors. Use for flexible element selection.
all => for accessing multiple HTML elements matching a selector. Use for batch operations.

# 3️⃣ DOM Manipulation Variables
html => for setting or getting innerHTML of an element. Use for HTML content manipulation.
text => for setting or getting textContent of an element. Use for text-only content.
attr => for setting or getting element attributes. Use for modifying element properties.
style => for manipulating CSS styles. Use for dynamic styling.
class => for adding, removing, or toggling CSS classes. Use for state-based styling.

# 4️⃣ Event Handling Variables
on => for attaching event listeners to elements. Use for interactive behavior.
off => for removing event listeners. Use for cleanup and memory management.
trigger => for programmatically firing events. Use for simulating user interactions.

# 5️⃣ Form Handling Variables
validate => for form validation. Use to check user input before submission.
submit => for handling form submissions. Use to process form data.

# 6️⃣ AJAX and Fetch Variables
fetch => for making HTTP requests. Use for API interactions.
post => for sending data to a server. Use for data submission.
get_data => for retrieving data from a server. Use for data retrieval.

# 7️⃣ Animation and Transition Variables
animate => for creating animations. Use for visual effects.
transition => for smooth state changes. Use for polished UI.

# 8️⃣ Storage Variables
store_local => for local storage operations. Use for persistent client-side storage.
store_session => for session storage operations. Use for temporary client-side storage.
cookie => for cookie management. Use for small data storage and tracking.

# 9️⃣ Utility Variables
wait => for creating delays and timeouts. Use for timed operations.
interval => for recurring operations. Use for polling and animations.
resize => for handling window resize events. Use for responsive behavior.

# 🔟 CSS Properties
# Layout Properties
width => element width
height => element height
margin => outer spacing
padding => inner spacing
display => display type (block, flex, grid, etc.)
position => positioning method
top, right, bottom, left => positioning coordinates
flex => flexbox properties
grid => grid properties

# Visual Properties
color => text color
background => background properties
border => border properties
border-radius => rounded corners
box-shadow => element shadow
opacity => transparency

# Typography Properties
font-family => typeface
font-size => text size
font-weight => text boldness
text-align => text alignment
line-height => line spacing

# Usage Examples

# Element access example
get button_element {
    on click {
        # Handle click event
        text content = "Clicked!";
    }
}

# Form handling example
form login_form {
    validate {
        if (username.value == "") {
            show "Username is required";
            return false;
        }
        return true;
    }
    
    submit {
        # Process form submission
        post "/login" {
            data: {
                username: username.value,
                password: password.value
            },
            success: {
                redirect "/dashboard";
            }
        }
    }
}

# AJAX example
fetch "/api/data" {
    success: {
        take data = response;
        # Process data
    },
    error: {
        show "Failed to load data";
    }
}